{{- if (or .Values.frontend.ingress.host .Values.frontend.ingress.hosts) }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: frontend
  annotations:
{{- if .Values.frontend.ingress.tls.certManager.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.frontend.ingress.tls.certManager.clusterIssuer }}
{{- end }}
{{- if .Values.frontend.ingress.tls.certManager.issuer }}
    cert-manager.io/issuer: {{ .Values.frontend.ingress.tls.certManager.issuer }}
{{- end }}
{{- if .Values.frontend.ingress.modsecurity.enabled }}
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
{{- if .Values.frontend.ingress.modsecurity.whitelist }}
      SecRule REMOTE_ADDR "!@ipMatch {{ .Values.frontend.ingress.modsecurity.whitelist }}" "id:10000,deny"
{{- end }}
{{- if .Values.frontend.ingress.modsecurity.adminWhitelist }}
      SecRule REMOTE_ADDR "@ipMatch {{ .Values.frontend.ingress.modsecurity.adminWhitelist }}" "id:10005,ctl:ruleEngine=Off"

      SecRule REQUEST_URI "@beginsWith /admin" "id:10010,deny"
      {{ "" }}
{{- end }}
{{- if .Values.frontend.ingress.modsecurity.owasp }}
      Include /etc/nginx/owasp-modsecurity-crs/nginx-modsecurity.conf
{{- end }}
{{- end }}
{{- if (and .Values.frontend.ingress.modsecurity.enabled .Values.frontend.ingress.modsecurity.whitelist ) }}
    drupal-memcached/frontend.ingress.modsecurity.whitelist: {{ .Values.frontend.ingress.modsecurity.whitelist | quote }}
{{- end }}
{{- if (and .Values.frontend.ingress.modsecurity.enabled .Values.frontend.ingress.modsecurity.adminWhitelist ) }}
    drupal-memcached/frontend.ingress.modsecurity.adminWhitelist: {{ .Values.frontend.ingress.modsecurity.adminWhitelist | quote }}
{{- end }}
spec:
  rules:
{{- if .Values.frontend.ingress.host }}
    - host: {{ .Values.frontend.ingress.host }}
      http:
        paths:
        - path: /
          backend:
            serviceName: frontend
            servicePort: 80
{{- end }}
{{- range .Values.frontend.ingress.hosts }}
    - host: {{ . }}
      http:
        paths:
        - path: /
          backend:
            serviceName: frontend
            servicePort: 80
{{- end }}
{{- if .Values.frontend.ingress.tls.enabled }}
  tls:
    - hosts:
{{- if .Values.frontend.ingress.host }}
      - {{ .Values.frontend.ingress.host }}
{{- end }}
{{- range .Values.frontend.ingress.hosts }}
      - {{ . }}
{{- end }}
      secretName: frontend-cert
{{- end }}
{{- end }}